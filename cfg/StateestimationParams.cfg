#! /usr/bin/env python

PACKAGE='ardrone_navmap'

#from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()





#       Name                         Type      Reconfiguration lvl    Description                                                   Default             Min     Max
gen.add("UseControlGains",                  bool_t,     0,              "Use Control Commands for prediction in EKF", True)
gen.add("UseNavdata",                    bool_t,     0,              "Enable EKF-Updates from Navdata", True)
#gen.add("UseNavdataSpeeds",                    bool_t,     0,              "Enable EKF-Updates from Navdata Speeds", True)
gen.add("UseLSD",                  bool_t,     0,              "Enable EKF-Updates from PTAM", True)
gen.add("KFDistWeight",       double_t,      0,              "Determines how often keyframes are taken, depending on the distance to the current Keyframe.",                     0.075,             0.0,      10.0)
gen.add("KFUsageWeight",       double_t,      0,              " Determines how often keyframes are taken, depending on the overlap to the current keyframe. ",                     0.5,             0.0,      10)
gen.add("RescaleFixOrigin",                    bool_t,     0,              "on scale reestimation: if TRUE, the map init pos remains fixed, if false, the current drone pos remains fixed.", True)



gen.add("c1", double_t, 0, "prediction model parameter", 0.58, 0.0, 50)
gen.add("c2", double_t, 0, "prediction model parameter", 17.5, 0.0, 50)
gen.add("c3", double_t, 0, "prediction model parameter", 7, 0.0, 50)
gen.add("c4", double_t, 0, "prediction model parameter", 24, 0.0, 50)
gen.add("c5", double_t, 0, "prediction model parameter", 25, 0.0, 50)
gen.add("c6", double_t, 0, "prediction model parameter", 90, 0.0, 200)
gen.add("c7", double_t, 0, "prediction model parameter", 0.8, 0.0, 50)
gen.add("c8", double_t, 0, "prediction model parameter", 0.6, 0.0, 50)



exit(gen.generate(PACKAGE, "Config", "StateestimationParams"))
